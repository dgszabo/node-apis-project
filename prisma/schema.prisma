generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String         @unique
  password      String
  exercises     Exercise[]
  refreshTokens RefreshToken[]
  userExercises UserExercise[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
}

model Exercise {
  id          String         @id @default(cuid())
  name        String
  description String
  difficulty  Int           @db.SmallInt
  isPublic    Boolean       @default(false)
  creator     User          @relation(fields: [creatorId], references: [id])
  creatorId   String
  userExercises UserExercise[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?

  @@index([creatorId])
}

model UserExercise {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  exercise  Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
  isSaved   Boolean  @default(false)
  isFavorited Boolean @default(false)
  rating    Int?     @db.SmallInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@unique([userId, exerciseId])
  @@index([userId])
  @@index([exerciseId])
}

model RefreshToken {
  id          String   @id @default(cuid())
  token       String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  expiresAt   DateTime
  deviceInfo  String?
  isRevoked   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
}
